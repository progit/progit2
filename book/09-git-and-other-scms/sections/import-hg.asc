==== Mercurial

(((Mercurial)))(((Importing, from Mercurial)))
Since Mercurial and Git have fairly similar models for representing versions, and since Git is a bit
more flexible, converting a repository from Mercurial to Git is fairly straightforward.
You use a tool called `hg-fast-export`, which you must install first.

[source,console]
----
$ git clone https://github.com/frej/fast-export.git
----

The first step in the conversion is to get a full clone of the Mercurial repository you want to convert.

[source,console]
----
$ hg clone <remote repo URL> /tmp/hg-repo
----

The next step is to create an author mapping file.
Mercurial is a bit more forgiving than Git for what it will put in the author field for changesets, so this is a good time to clean house.
Generating this is a one-line command in `bash`.

[source,console]
----
$ cd /tmp/hg-repo
$ hg log | grep user: | sort | uniq | sed 's/user: *//' > ../authors
----

This takes a few seconds, depending on how long your project's history is, and afterwards
the `/tmp/authors` file looks something like

[source]
----
bob
bob@localhost
bob <bob@company.com>
bob jones <bob <AT> company <DOT> com>
Bob Jones <bob@company.com>
Joe Smith <joe@company.com>
----

In this example, the same person (Bob) created changesets under four different names, one of which
actually looks correct, and one of which would be completely invalid in a Git commit.
`hg-fast-export` fixes this by adding `={new name and email address}` at the end of every line we
want to change, and removing the lines containing any usernames that we want to ignore.
If all the usernames look fine, we don't need this file at all.
In this example, we want our file to look like

[source]
----
"bob"="Bob Jones <bob@company.com>"
"bob@localhost"="Bob Jones <bob@company.com>"
"bob <bob@company.com>"="Bob Jones <bob@company.com>"
"bob jones <bob <AT> company <DOT> com>"="Bob Jones <bob@company.com>"
----

The same kind of mapping file can be used to rename branches and tags when the Mercurial name isn't allowed by Git.

The next step is to create our new Git repository, and run the export script.

[source,console]
----
$ git init /tmp/converted
$ cd /tmp/converted
$ /tmp/fast-export/hg-fast-export.sh -r /tmp/hg-repo -A /tmp/authors
----

The `-r` flag tells `hg-fast-export` where to find the Mercurial repository to convert,
and the `-A` flag tells it where to find the author-mapping file.
The script parses Mercurial changesets and converts them into a script for Git's "fast-import" feature
(which we discuss in detail a bit later on).
This takes a bit (though it's _much_ faster than it would be over the network), and the
output is fairly verbose.

[source,console]
----
$ /tmp/fast-export/hg-fast-export.sh -r /tmp/hg-repo -A /tmp/authors
Loaded 4 authors
master: Exporting full revision 1/22208 with 13/0/0 added/changed/removed files
master: Exporting simple delta revision 2/22208 with 1/1/0 added/changed/removed files
master: Exporting simple delta revision 3/22208 with 0/1/0 added/changed/removed files
[…]
master: Exporting simple delta revision 22206/22208 with 0/4/0 added/changed/removed files
master: Exporting simple delta revision 22207/22208 with 0/2/0 added/changed/removed files
master: Exporting thorough delta revision 22208/22208 with 3/213/0 added/changed/removed files
Exporting tag [0.4c] at [hg r9] [git :10]
Exporting tag [0.4d] at [hg r16] [git :17]
[…]
Exporting tag [3.1-rc] at [hg r21926] [git :21927]
Exporting tag [3.1] at [hg r21973] [git :21974]
Issued 22315 commands
git-fast-import statistics:
---------------------------------------------------------------------
Alloc'd objects:     120000
Total objects:       115032 (    208171 duplicates                  )
      blobs  :        40504 (    205320 duplicates      26117 deltas of      39602 attempts)
      trees  :        52320 (      2851 duplicates      47467 deltas of      47599 attempts)
      commits:        22208 (         0 duplicates          0 deltas of          0 attempts)
      tags   :            0 (         0 duplicates          0 deltas of          0 attempts)
Total branches:         109 (         2 loads     )
      marks:        1048576 (     22208 unique    )
      atoms:           1952
Memory total:          7860 KiB
       pools:          2235 KiB
     objects:          5625 KiB
---------------------------------------------------------------------
pack_report: getpagesize()            =       4096
pack_report: core.packedGitWindowSize = 1073741824
pack_report: core.packedGitLimit      = 8589934592
pack_report: pack_used_ctr            =      90430
pack_report: pack_mmap_calls          =      46771
pack_report: pack_open_windows        =          1 /          1
pack_report: pack_mapped              =  340852700 /  340852700
---------------------------------------------------------------------

$ git shortlog -sn
   369  Bob Jones
   365  Joe Smith
----

That's pretty much all there is to it.
All of the Mercurial tags have been converted to Git tags, and Mercurial branches and bookmarks have been converted to Git branches.
Now you're ready to push the repository to its new server-side home.

[source,console]
----
$ git remote add origin git@my-git-server:myrepository.git
$ git push origin --all
----
