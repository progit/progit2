[[_git_aliases]]
=== Git Aliases

(((aliases)))
Before we finish this chapter on basic Git, here's just one little tip that can make your Git experience simpler: aliases.
We don't refer to them later in the book, so now's the time to learn how to use them.

Git doesn't automatically try to guess a partially entered command.
If you don't want to enter the entire Git command, set up an alias for the command by running `git config`.(((git commands, config)))
Here are a couple of examples.

[source,console]
----
$ git config --global alias.co checkout
$ git config --global alias.br branch
$ git config --global alias.ci commit
$ git config --global alias.st status
----

This means that, for example, instead of typing `git commit`, you can just type `git ci`.
As you continue using Git, don't hesitate to create new aliases for commands you use frequently.

This technique can also be very useful for creating commands that you think should exist, but don't.
For example, to correct the usability problem you encountered when unstaging a file,
add your own unstage alias to Git.

[source,console]
----
$ git config --global alias.unstage 'reset HEAD --'
----

This makes the following two commands equivalent.

[source,console]
----
$ git unstage fileA
$ git reset HEAD -- fileA
----

This seems a bit clearer.
It's also common to add a `last` alias.

[source,console]
----
$ git config --global alias.last 'log -1 HEAD'
----

This way, you can easily see the last commit.

[source,console]
----
$ git last
commit 66938dae3329c7aebe598c2246a8e6af90d04646
Author: Josh Goebel <dreamer3@example.com>
Date:   Tue Aug 26 19:48:51 2008 +0800

    Test for current head

    Signed-off-by: Scott Chacon <schacon@example.com>
----

Maybe you want to create an alias that runs an external command, rather than a Git subcommand.
In that case, start the command with a `!` character.
This is useful if you write your own tools that work with a Git repository.
We demonstrate this by aliasing `git visual` to run `gitk`.

[source,console]
----
$ git config --global alias.visual '!gitk'
----
