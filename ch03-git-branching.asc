[[ch03-git-branching]]
== Git Branching

(((branches)))
Every modern VCS has some form of branching support.
Branching is when you start a new path of development off an existing path.
You can continue working on both branches without one interfering with the other.
Later on you can merge the two branches back to one development path.
In many VCSs, creating a branch is a somewhat expensive process, often requiring a new copy
of your source code directory, which can take a long time to create in large projects.

Some people refer to Git's branching model as its killer feature. It certainly sets Git apart in the VCS world.
Why is it so special?
The way Git branches is incredibly lightweight, making branching operations nearly instantaneous.
Switching back and forth between branches is just as fast.
Unlike many other VCSs, Git encourages frequent branching and merging, even multiple times a day.
Understanding and mastering Git branching and merging gives you powerful tools
and can entirely change the way you work.

include::book/03-git-branching/sections/nutshell.asc[]

include::book/03-git-branching/sections/basic-branching-and-merging.asc[]

include::book/03-git-branching/sections/branch-management.asc[]

include::book/03-git-branching/sections/workflows.asc[]

include::book/03-git-branching/sections/remote-branches.asc[]

include::book/03-git-branching/sections/rebasing.asc[]

=== Summary

We've covered basic branching and merging in Git.
You should feel comfortable creating and switching to new branches, switching between branches, and merging local branches together.
You should also be able to share your branches by pushing them to a shared server, working with others on shared branchesi, and rebasing your branches before they're shared.

Next, we cover what you need to run your own Git repository-hosting server.
